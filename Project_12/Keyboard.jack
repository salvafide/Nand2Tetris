// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c;

        // Wait until key is pressed
        while(Keyboard.keyPressed() = 0){} // Do nothing
        // code of currently pressed key
        let c = Keyboard.keyPressed();
        // Wait until the key is released
        while( ~(Keyboard.keyPressed() = 0) ){} // Do nothing
        // display c at current cursor location
         if ( ~(c = 129) & (~(c = 128)) ){
            do Output.printChar(c);
        }
        return c; 
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String s;
        var char c;

        // Display the message
        do Output.printString(message);
        // empty string
        let s = String.new(88);
        
        while(true){
            let c = Keyboard.readChar();

            if (c = 128){
                do Output.println();
                return s;
            }
            if (c = 129){
                if (s.length() > 0){
                    do s.eraseLastChar();
                    do Output.backSpace();
                }
            }else{
                let s = s.appendChar(c);
            }
        }
        
        return s;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var String i, line;

        let line = Keyboard.readLine(message);
        let i = line.intValue();
        return i;
    }
}
